Coveralls for python
====================

.. image:: https://travis-ci.org/coagulant/coveralls-python.png?branch=master
    :target: https://travis-ci.org/coagulant/coveralls-python

.. image:: https://coveralls.io/repos/coagulant/coveralls-python/badge.png?branch=master
    :target: https://coveralls.io/r/coagulant/coveralls-python

`Coveralls.io`_ is service to publish your coverage stats online with a lot of `nice features`_.
This package provides seamless integration with ``coverage.py`` in your python projects.
For ruby projects, there is an `official gem`_.
Only projects hosted on Github are supported.

Works with python 2.6-2.7 and 3.3

.. _Coveralls.io: http://coveralls.io
.. _nice features: https://coveralls.io/info/features
.. _official gem: https://coveralls.io/docs/ruby

Usage (Travis CI)
-----------------

This library will publish your coverage results on coveralls.io for everyone to see (unless you're using pro account).
This package can possibly work with different CI environments, but it's only tested to work with `Travis CI`_ atm.

1. First, log in via Github and `add your repo`_ on Coveralls website.
2. Add ``pip install coveralls`` to ``install`` section of ``.travis.yml``
3. Make sure you run your tests with coverage during the build in ``script`` part. Example::

    script:
        coverage run --source=coveralls setup.py test

   It depends on how you run your tests. Here is another example::

    # --source specifies what packages to cover, you will WANT to use that option
    script:
        coverage run --source=moscowdjango,meetup manage.py test

   Note, that example command will gather coverage for specified package.
   If you wish to customise what's included in your reports, consult `coverage docs`_.

.. _coverage docs: http://nedbatchelder.com/code/coverage/

4. Execute run ``coveralls`` in ``after_success`` section::

    after_success:
        coveralls

Full example of .travis.yml::

    language: python
    python:
      - 2.7
      - 3.3
    install:
      - pip install -r requirements.txt --use-mirrors
      - pip install coveralls --use-mirrors
    script:
      - coverage run --source=moscowdjango,meetup manage.py test
    after_success:
      - coveralls

Usage (another CI)
~~~~~~~~~~~~~~~~~~

If you're NOT using Travis, you have to provide at least a ``repo_token`` option in ``.coveralls.yml``
at the root of your repo. This is your own secret token, which is available at the bottom of your repository's page on Coveralls.
Make sure it stays **secret**, do not put it in your public repo.

Example of .coveralls.yml::

    # .coveralls.yml
    repo_token: TjkDuVpGjuQcRhNW8dots9c8SSnv7ReM5

.. _add your repo: https://coveralls.io/repos/new
.. _Travis CI: http://travis-ci.org


How it works
------------
It makes custom report for data generated by ``coverage.py`` package and sends it to `json API`_ of coveralls.io service.
All python files in your coverage analysis are posted to this service along with coverage stats,
so please make sure you're not ruining your own security! For private projects there is `Coveralls Pro`_.

.. _json API: https://coveralls.io/docs/api_reference
.. _Coveralls Pro: https://coveralls.io/docs/pro

Tests
-----
::

    $ python setup.py test
